// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int       @id       @default(autoincrement())
  email           String    @unique
  password        String

  role            UserRole  @default(PENDING)


  times           Time[]
}

enum UserRole {
  ADMIN
  ENABLER
  COLLABORATOR
  PENDING
}

model Team {
  id              String   @id
  name            String

  projects        Project[]
  rates           Rate[]
}

model Rate {
  id              Int     @id       @default(autoincrement())
  name            String
  teamId          String
  rate            Int

  team            Team    @relation(fields: [teamId], references: [id], onDelete: Cascade)
  times           Time[]
}

model Project {
  id              String   @id
  estimatedTime   Int?
  name            String
  teamId          String
  createdAt       String
  updatedAt       String
  description     String?
  state           String
  startDate       String?
  targetDate      String?

  time            Time[] 

  issues          Issue[] 
  team            Team    @relation(fields: [teamId], references: [id], onDelete: Cascade)
}

model Time {
  id              Int     @id       @default(autoincrement())
  startTime       DateTime
  endTime         DateTime?
  userId          Int
  projectId       String
  rateId          Int
  totalElapsedTime Int  

  user            User    @relation(fields: [userId], references: [id])
  project         Project @relation(fields: [projectId], references: [id],onDelete: Cascade)
  rate            Rate    @relation(fields: [rateId], references: [id])
}

model Issue {
  id              String   @id
  createdAt       String
  updatedAt       String
  title           String
  dueDate         String?
  projectId       String
  priorityLabel   String
  identifier      String
  assigneeName    String?
  projectName     String
  state           String
  teamKey         String
  teamName        String

  project         Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  labels          Label[] 
}

model Label {
  id        String   @id
  color     String
  name      String
  parentId  String?
  issueId   String 

  issue     Issue    @relation(fields: [issueId], references: [id], onDelete: Cascade)
}